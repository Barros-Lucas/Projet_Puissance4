VALUE_MIN = -10
VALUE_MAX = 10

VALUE_ALERT_EMPTY = 999


def matriceFromFile():
    f = open('in_file.txt', 'r')
    mat = {}
    matVal = {}
    i = 5;
    y = 0;
    for line in f:
        for word in line.split():
            mat[(y, i)] = word
            if word == "-" :
                matVal[(y, i)] = 0
            if word == "O" :
                matVal[(y, i)] = -1
            if word == "X":
                matVal[(y, i)] = 1
            y += 1
        y = 0
        i -= 1

    return mat, matVal

matrice, matriceValue = matriceFromFile()

def empty(matrice):
    for value in matrice:
        if matrice[value] == "X" or matrice[value] == "O":
            return False
    return True


def getPossiblePlay(matrice):
    col = []
    top = []
    for k in range(0,7):
        col.append(getCol(matrice,k))
        toop = getTop(getCol(matrice,k))
        top.append(toop+1 if toop<5 else -1)


    return top

def getTop(colone):
    i = 0
    for value in colone:
        if colone[value] == 1 or colone[value] == -1:
            return i
        i+=1
    return -1

def getCol(matrice, i):
    col = {}
    for k in range(0,6):
        col[i,k] = matrice[i,k]
    return col

def getStateEvalFromPosition(matrice,y,x):
    #state objectif ->
    #[[i00,i01,i02,i03,i04,i05,i06],[i10,i11,i12,i13,i14,i15,i16],[i20,i21,i22,i23,i24,i25,i26],[i30,i31,i32,i33,i34,i35,i36],[i40,i41,i42,i43,i44,i45,i46],[i50,i51,i52,i53,i54,i55,i56],[i60,i61,i62,i63,i64,i65,i66]]
    state = []
    for k in range(0,7):
        state.append()

print("position possible Ã  jouer")
print(getPossiblePlay(matriceValue))
print("position posible vers un etat evaluable")
print(getStateEvalFromPosition(matriceValue,getPossiblePlay(matriceValue)[0],0))
